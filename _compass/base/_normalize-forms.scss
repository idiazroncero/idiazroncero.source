// Dependencies.

// Forms
//
// Weight: 2
//
// Style guide: base.forms

// Correct margin displayed oddly in IE 6/7.
@if support-legacy-browser(ie, '7') {
  form {
    margin: 0;
  }
}

form {
  // Todo en fuente legible
  * {
    font-family:$fuente-forms;
    @include adjust-font-size-to($h5);
  }
}

button,
input,
optgroup,
select,
textarea {
  // Keep form elements constrained in their containers.
  @include box-sizing(border-box);
  max-width: 100%;
  // Correct color not being inherited.
  // Known issue: affects color of disabled elements.
  color: inherit;
  // Correct font properties not being inherited.
  font: inherit;
  // Address margins set differently in Firefox 4+, Safari, and Chrome.
  margin: 0;
  @if support-legacy-browser(ie, '7') {
    // Address `font-family` inconsistency between `textarea` and other form in IE 7
    *font-family: $fuente-body;
    // Improve appearance and consistency with IE 6/7.
    *vertical-align: middle;
  }
  &:focus { // QUITA ESE HORROR AZUL
    outline:none;
  }
}

// Address `overflow` set to `hidden` in IE 8/9/10/11.
button {
  overflow: visible;
}

// Address inconsistent `text-transform` inheritance for `button` and `select`.
// All other form control elements do not inherit `text-transform` values.
// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
// Correct `select` style inheritance in Firefox.
button,
select {
  text-transform: none;
}

// Remove inner padding and border in Firefox 4+.
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

// Buttons
//
// Buttons built with the &lt;button&gt; tag are the most flexible for styling
// purposes. But &lt;input&gt; tags with <code>type</code> set to
// <code>submit</code>, <code>image</code>, <code>reset</code>, or
// <code>button</code> are also supported.
//
// Markup: forms-button.hbs
//
// Style guide: base.forms.button

// 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
//    and `video` controls.
// 2. Correct inability to style clickable `input` types in iOS.
button,
html input[type="button"], // 1
input[type="reset"],
input[type="submit"] {
  // @extend %button;
  -webkit-appearance: button; // 2
  // Prevent "line-height: normal" rule below from breaking the
  // "appearance: button" styling on the input elements in Firefox.
  line-height: inherit;
}

// Inputs
//
// Input fields are mostly text-based inputs that include the HTML5 types:
// <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code>,
// <code>email</code>, <code>password</code>, <code>date</code>,
// <code>time</code>, <code>number</code>, <code>range</code>,
// <code>color</code>, and <code>file</code>.
//
// Markup: forms-input.hbs
//
// Style guide: base.forms.input

input {
  // Address Firefox 4+ setting `line-height` on `input` using `!important` in
  // the UA stylesheet.
  line-height: normal;

  &[type="text"],
  &[type="search"],
  &[type="tel"],
  &[type="url"],
  &[type="email"],
  &[type="password"],
  &[type="date"],
  &[type="time"],
  &[type="number"] {
    line-height:$base-line-height - 1; // compensamos el border-bottom;
    padding:0;
    border:none;
    border-bottom:1px dotted $gris_medio;
    cursor:pointer;
    &:hover, &:focus {
      border-bottom:1px solid $negro;
    }
  }

  &[type="range"] {
    // Add your styles.
  }

  &[type="color"] {
    // Add your styles.
  }

  &[type="file"] {
    // Add your styles.
  }
}

// Checkboxes
//
// If an &lt;input&gt; element has the <code>type="checkbox"</code> attribute
// set, the form field is displayed as a checkbox.
//
// It's recommended that you don't attempt to style these elements.
// Firefox's implementation doesn't respect box-sizing, padding, or width.
//
// Markup: forms-input-checkbox.hbs
//
// Style guide: base.forms.input-checkbox

// Radio buttons
//
// If an &lt;input&gt; element has the <code>type="radio"</code> attribute
// set, the form field is displayed as a radio button.
//
// It's recommended that you don't attempt to style these elements.
// Firefox's implementation doesn't respect box-sizing, padding, or width.
//
// Markup: forms-input-radio.hbs
//
// Style guide: base.forms.input-radio

input[type="checkbox"],
input[type="radio"] {
  @if support-legacy-browser(ie, '10') {
    // Address box sizing set to `content-box` in IE 8/9/10.
    @include box-sizing(border-box);
    // Remove excess padding in IE 8/9/10.
    padding: 0;
  }
  // Remove excess padding in IE 7.
  // Known issue: excess padding remains in IE 6.
  @if support-legacy-browser(ie, '7') {
    *height: 13px;
    *width: 13px;
  }
}

// Fix the cursor style for Chrome's increment/decrement buttons. For certain
// `font-size` values of the `input`, it causes the cursor style of the
// decrement button to change from `default` to `text`.
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  // Address `box-sizing` set to `border-box` in Safari and Chrome
  // (include `-moz` to future-proof).
  @include box-sizing(content-box);
  // Address `appearance` set to `searchfield` in Safari and Chrome.
  -webkit-appearance: textfield;

  // Remove inner padding and search cancel button in Safari and Chrome on OS X.
  // Safari (but not Chrome) clips the cancel button when the search input has
  // padding (and `textfield` appearance).
  &::-webkit-search-cancel-button,
  &::-webkit-search-decoration {
    -webkit-appearance: none;
  }
}

// Fieldsets
//
// The fieldset element groups a set of form fields, optionally under a common
// name given by the legend element.
//
// Markup: forms-fieldset.hbs
//
// Style guide: base.forms.fieldset

fieldset {
  // Apply borders and padding that keep the vertical rhythm.
  @include apply-side-rhythm-border(top, $width: 1px, $lines: .35);
  @include apply-side-rhythm-border(bottom, $width: 1px, $lines: .65);
  @include apply-side-rhythm-border(left, $width: 1px, $lines: .625);
  @include apply-side-rhythm-border(right, $width: 1px, $lines: .625);
  border-color: color(border);
  // Define consistent border, margin, and padding.
  margin: 0;

  ul {
    margin:0;
    padding:0;
    li {list-style-type:none;}
  }
}

legend {
  // Correct `color` not being inherited in IE 8/9/10/11.
  @if support-legacy-browser(ie, '11') {
    border: 0;
  }
  // Align legend text with a fieldset's text while removing left padding so
  // people aren't caught out if they zero out fieldset padding.
  margin-left: -5px;
  padding: 0 5px;
  // Correct alignment displayed oddly in IE 6/7.
  @if support-legacy-browser(ie, '7') {
    *margin-left: -7px;
  }
  @include adjust-font-size-to($h4);
  font-weight:bold;
}

// Labels
//
// The &lt;label&gt; tag represents a caption of a form field. The label can be
// associated with a specific form control by using the <code>for</code>
// attribute or by putting the form control inside the label element itself.
//
// Markup: forms-label.hbs
//
// Style guide: base.forms.label

label {
  font-weight: bold;
}

// Select
//
// The &lt;select&gt; tag represents a form field for selecting amongst a set of
// options.
//
// Known limitation: by default, Chrome and Safari on OS X allow very limited
// styling of `select`, unless a `border` property is set.
//
// Markup: forms-select.hbs
//
// Style guide: base.forms.select

select {
  // Add your styles.
}

optgroup {
  // Don't inherit the `font-weight` (applied by a rule above).
  // NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
  font-weight: bold;
}

// Text areas
//
// The &lt;textarea&gt; tag represents a multiline plain text form field.
//
// Markup: forms-textarea.hbs
//
// Style guide: base.forms.textarea

textarea {
  // Remove default vertical scrollbar in IE 8/9/10/11.
  overflow: auto;
}


// Normalizado de simple_form
//
// Utilizamos las clases que propone la gema simple_form para dar estilo coherente a los
// formularios según tipo de input

.input {
  margin-bottom:rhythm(1);
  @include pie-clearfix;

  // Pon todas las etiquetas a un mismo nivel (salvo ckeditor)
  > label:not(.ckeditor) {
    @include span(2 of 7 no-gutters);
    &.required {
    }
  }

  // Inputs que ocupan una línea.
  &.string, &.float, &.text {
    label, input { // Ponemos etiqueta e input al ladito el uno del otro
      display:inline-block;
      vertical-align:middle;
    }
  }
  

  // El caso especial de textarea no ckeditor
  textarea {
    @extend .input-fullw;
    border:none;
    border-bottom:1px dotted $gris_medio;
    padding:0;
    cursor:pointer;
    height:rhythm(2);
    &:hover, &:focus {
      border-bottom:1px solid $negro;
    }
  }

  // Corrige los radio buttons demasiado cercanos
  &.radio_buttons {
    input {
      margin-right:7px;
    }
    span label {
      font-weight:normal;
    }
  }

  // Inputs que deben ocupar el 100% del espacio disponible
  .input-fullw {
    @include span(5 of 7 no-gutters);
  }
}

.pan-harinas {
  .boton-normal {
    float:right;
  }
  .input {
    margin-bottom:0;
  }
  .pan-harinas-harina {
    padding:rhythm(.25) rhythm(.5);
    background:$humo;
    @include border-radius(5px);
    margin-bottom:rhythm(.5);
    position:relative;
  }
  .pan-harinas-borrar {
    position:absolute;
    top:rhythm(.25);
    right:rhythm(.5);
    background:$negro;
    width:rhythm(.5);
    height:rhythm(.5);
    color:$blanco;
    text-align:center;
    @include adjust-font-size-to($h6,.5);
    font-weight:bold;
  }
}
